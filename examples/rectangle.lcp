fun print(i64 ^i8)
	1 1 call3 pop
end

struct Rectangle
	i64 width
	i64 height
end

fun Rectangle::area(^Rectangle) [i64]
	Rectangle r @r
	&r.width &r.height *
end

fun Rectangle::perimeter(^Rectangle) [i64]
	Rectangle r @r
	&r.width 2 *
	&r.height 2 * +
end

fun Rectangle::visualise(^Rectangle)
	Rectangle r @r
	0 height_loop:
		# if not less than the height
		dup &r.height < cjmpef height_loop

		0 row_loop:
			dup &r.width <= cjmpef row_loop
			"+" print
			1 + jmp row_loop
		end pop
		"\n" print
	
		1 + jmp height_loop
	end pop
end

fun Rectangle::info(^Rectangle)
	Rectangle r @r
	"Info:\n" print
	" - Width: " print &r.width dump
	" - Height: " print &r.height dump
	" - Area: " print
	r Rectangle::area dump
	" - Perimeter: " print 
	r Rectangle::perimeter dump
	"Visual:\n" print
	r Rectangle::visualise
end

fun main()
	Rectangle rect1
	12 @rect1.width
	7  @rect1.height
	rect1 Rectangle::info
	"\n" print

	Rectangle rect2
	10 @rect2.width
	6  @rect2.height
	rect2 Rectangle::info
end
