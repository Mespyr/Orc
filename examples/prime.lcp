fun modulo(int int) [int]
	/ swp pop
end

fun ?prime(int) [int]
	# stack: is_prime, num, idx
	1 swp # is_prime
	2     # idx

	# if number is less than 2 it isn't prime
	if_less_than_2:
		# if number is not less than 2, continue with loop
		over over < cjmpef if_less_than_2

		# set 'is_prime' to 0
		rot pop 0
		rot rot
		jmpe loop
	end

	loop:
		# while 'num' is greater than 'idx' stay in loop
		over over > cjmpef loop
		
		# if number is not divisible by 'idx' skip this label
		if_lab:
			# check if modulo is equal to 0 and skip if not
			over over modulo 0 = cjmpef if_lab

			# set 'is_prime' to 0
			rot pop 0
			rot rot
			jmpe loop
		end

		1 +
		jmp loop
	end

	# remove values except 'is_prime' 
	pop pop
end

fun main()
	1 loop:
		# stay in loop until greater or equal to 1000
		dup 1000 < cjmpef loop

		# skip section if number is not prime
		print_prime:
			dup ?prime cjmpef print_prime
			# print prime number
			dup dump	
		end
	
		1 +

		jmp loop
	end pop
end
