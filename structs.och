type TOne =
  size: Int
  pre: Char

type TTwo =
  first: TOne
  other: Int

fn show_access =
  expr udup(a b) = a a b; # local exprs
  # creating instance of struct
  # allocated on heap
  new(TOne)
  # setting members using `<-`
  dup 12  <- size
  dup 'A' <- pre
  # reading members using `->`
  dup -> size dump
  dup -> pre dump
  # can be formatted as `->size` and `<-size`
  dup ->size 1 + udup <-size
  dup ->size dump
  # delete instace using delete
  delete

fn show_nested_access =
  new(TTwo)
  dup ->first # returns ^TOne, structs cannot be pushed to stacks unless they are references.
  12 <-size   # set TTwo.first.size to twelve
  dup ->first ->size dump
  delete

fn main =
  show_access
  show_nested_access
